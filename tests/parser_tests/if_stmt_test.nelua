local Parser = require "...libs.parser"
local ErrLoc = require "...libs.errloc"

do
  local content = [[
if true {
  print("hello world")
} elif false {
  print("bye")
} else {
  print("UNREACHABLE")
}
]]

  local new_parser_res = Parser.new("if_elif_else_stmt", content)
  assert(new_parser_res:is_ok())

  local parser = new_parser_res:get_ok()

  local parser_res = parser:parse()
  assert(parser_res:is_ok())

  local ast = parser_res:get_ok()

  local expected = [[
AST
  IF_STMT -> LITERAL(true)
    PROC_CALL print(
      LITERAL("hello world")
    )
  ELIF_STMT -> LITERAL(false)
    PROC_CALL print(
      LITERAL("bye")
    )
  ELSE_STMT
    PROC_CALL print(
      LITERAL("UNREACHABLE")
    )
]]
  local res = ast:tostring()
  assert(expected == res)
end
